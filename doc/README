Installation
============

- Create a 'build' directory and enter it
- Type 'ccmake ..'
- Set include and library directories for dependencies
- Type 'make'

QGIS Plugin installation
========================

Just type 'nmake install' and it should install the plugin and all required dependencies to your local qgis plugin directory

When QGIs is launched, go to the "Extension management" dialog, look for "ifsttar" and enable it.

WPS, FCGI and webserver configuration
=====================================

Option 1 - Apache
-----------------

Download mod_fcgid from http://www.apachelounge.com/download/

You will have to setup a directory where FastCGI programs can be called from the Apache webserver.

On Windows implementation, you have to choose a directory WITHOUT SPACES

Add this to the configuration file (conf/httpd.conf):

---------------------------------------------------
LoadModule fcgid_module modules/mod_fcgid.so

Alias /fcgi-bin/ some_directory_on_disk
<Directory some_directory_on_disk>
SetHandler fcgid-script
Options +ExecCGI
Order allow,deny
Allow from all
</Directory>
---------------------------------------------------

The WPS executable, Tempus plugin DLLs and DLL dependencies must be copied into the fcgi-bin directory (called some_directory_on_disk).

Restart the Apache server

You can now test the WPS installation with a browser pointing to http://127.0.0.1/wps?service=wps&version=1.0.0&request=GetCapabilities

The problem with this kind of installation is that it is hard to debug in case of problems. You do not have access to any messages
that could be displayed by the wps executable and Apache must be restarted for every new WPS compilation.

Option 2 - Standalone FCGI with nginx
--------------------------------------

The second option is to use the standalone mode of the WPS server and a light httpd server (like nginx or lighttpd) that
just "passes" execution to this executable.

You have to launch the "wps.exe" executable from a command line, like so:

hme@socompa:~/build$ wps\wps -c core -l plugin1 -l plugin2 -p 9000

It will create a listening socket on port 9000 and start wps in the "core" directory
(needed because the core looks for external plugins which are located in the "core" directory")
This way, you can see debugging outputs.

On Windows, nginx can be downloaded from http://nginx.org/en/download.html. Just unzip it wherever you like.

You can now configure nginx, by adding the following lines inside the "server {" configuration part of nginx.conf

		location /wps {
                include fastcgi_params;
                fastcgi_pass 127.0.0.1:9000;
        }
		
nginx has normally to be launched only once.
